How did viewing a diff between two versions of a file help you see the bug that
was introduced?

   We can find the bugs by comparing differences between two versions of the file and then can find and correct them easily.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

	We can access to different versions of codes and can analyse them to reach better result.  

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually saving in Git helps programmers to create a commit after every logical changes which made by developers.
    Automatically saving can help developers to protect programmes from unsaved changes but can create meaningless saving  points. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

	For some programing puposes which multiple files are related to each other and developers need to find out all changes
	which made through the related files as well. 

How can you use the commands git log and git diff to view the history of files?

	we can use git log to list previous commits with their commit id and git diff provides the differences between two commits by their commit ids.

How might using version control make you more confident to make changes that
could break something?

	It is really useful to rollback codes and find the bugs after unsuccessful changes without any fear.

Now that you have your workspace set up, what do you want to try using Git for?

	Version control for my first project